name: Integrate PR Content with ChatGPT

on:
  pull_request:
    branches:
      - master

jobs:
  interact-with-chatgpt:
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0  # Ensure the whole repo history is pulled

      - name: Install jq
        run: sudo apt-get update && sudo apt-get install jq

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Extract and Prepare PR Content
        run: |
          git fetch origin +refs/pull/${{ github.event.pull_request.number }}/merge
          git checkout FETCH_HEAD
          files_changed=$(git diff --name-only ${{ github.event.pull_request.base.sha }} HEAD)
          changes=""
          for file in $files_changed; do
            diff=$(git diff ${{ github.event.pull_request.base.sha }} HEAD -- $file)
            changes+="${file}:\n${diff}\n"
          done
          # Encode changes to base64 to ensure safe transmission
          encoded_changes=$(echo -n "$changes" | base64 -w 0)
          echo "ENCODED_CHANGES=$encoded_changes" >> $GITHUB_ENV

      - name: Call ChatGPT with PR content
        run: |
          # Decode base64 changes to normal text (for debugging or if needed)
          decoded_changes=$(echo "${{ env.ENCODED_CHANGES }}" | base64 --decode)

          # Use jq to create JSON payload safely
          json_payload=$(jq -n --arg content "$decoded_changes" --arg additionalMessage "Faca um code review, seja breve a aponte os pontos de melhoria em portugues" '{
            model: "gpt-4o-mini",
            store: true,
            messages: [
              {role: "user", content: $additionalMessage},
              {role: "user", content: $content}
            ]
          }')

          # Send request to OpenAI API
          response=$(curl -s https://api.openai.com/v1/chat/completions \
            -H "Content-Type: application/json" \
            -H "Authorization: Bearer ${{ secrets.OPENAI_API_KEY }}" \
            -d "$json_payload")
          
          echo "Response from ChatGPT: $response"

      - name: Post response to GitHub PR
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          # Extract the output text from the ChatGPT response
          output=$(echo "$response" | jq -r '.choices[0].text')
          
          # Post the response as a comment to the PR
          comment_body=$(jq -n --arg body "$output" '{"body": $body}')
          curl -s -H "Authorization: token $GITHUB_TOKEN" \
               -H "Content-Type: application/json" \
               -X POST \
               -d "$comment_body" \
               "https://api.github.com/repos/${{ github.repository }}/issues/${{ github.event.pull_request.number }}/comments"

